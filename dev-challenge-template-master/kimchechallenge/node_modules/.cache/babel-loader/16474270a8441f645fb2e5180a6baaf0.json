{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justo\\\\Desktop\\\\KimcheChallenge\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\components\\\\GroupButton.jsx\";\nimport React from \"react\";\nimport './GroupButton.css';\nimport styled from 'styled-components';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Country from \"./Country.jsx\";\nexport default function GroupButton(props) {\n  const types = ['Continent', 'Language'];\n  const [active, setActive] = React.useState(types[0]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(props.countrynames);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n  const TurnButton = styled.button`\n        width:225px;\n        height:40px;\n        margin-left:95px;\n        cursor:pointer;\n        background: -moz-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        background: -webkit-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        background: linear-gradient(to bottom, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        border: 1px solid #6d6d6d;\n        border-radius: 5px;\n        ${({\n    active\n  }) => active && `\n        background: -moz-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        background: -webkit-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        background: linear-gradient(to bottom, rgb(38, 131, 253) 0%, rgb(38, 131, 253) 84%, #6d6d6d 100%);\n        color:white;\n        `}    \n    `;\n  let filteredCountries = data.countries.filter(country => country.name.includes(props.country)); // console.log(filteredCountries)\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"groups\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Group by:\"), types.map(type => /*#__PURE__*/React.createElement(TurnButton, {\n    key: type,\n    active: active === type,\n    onClick: () => setActive(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, type))), filteredCountries.map(c => {\n    return /*#__PURE__*/React.createElement(Country, {\n      key: c.code,\n      capital: c.capital,\n      currency: c.currency,\n      name: c.name,\n      emoji: c.emoji,\n      continent: c.continent.name,\n      languages: c.languages,\n      active: active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["C:/Users/Justo/Desktop/KimcheChallenge/dev-challenge-template-master/kimchechallenge/src/components/GroupButton.jsx"],"names":["React","styled","useQuery","Country","GroupButton","props","types","active","setActive","useState","loading","error","data","countrynames","TurnButton","button","filteredCountries","countries","filter","country","name","includes","map","type","c","code","capital","currency","emoji","continent","languages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACtC,QAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,UAAd,CAAd;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,KAAK,CAACS,QAAN,CAAeH,KAAK,CAAC,CAAD,CAApB,CAA5B;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACG,KAAK,CAACQ,YAAP,CAAzC;AAEA,MAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,QAAMG,UAAU,GAAGb,MAAM,CAACc,MAAO;;;;;;;;;;UAU3B,CAAC;AAAER,IAAAA;AAAF,GAAD,KACEA,MAAM,IACT;;;;;SAKC;KAjBN;AAoBA,MAAIS,iBAAiB,GAAGJ,IAAI,CAACK,SAAL,CAAeC,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBhB,KAAK,CAACc,OAA5B,CAAjC,CAAxB,CA5BsC,CA6BtC;;AACA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKb,KAAK,CAACgB,GAAN,CAAWC,IAAD,iBACP,oBAAC,UAAD;AACA,IAAA,GAAG,EAAEA,IADL;AAEA,IAAA,MAAM,EAAEhB,MAAM,KAAKgB,IAFnB;AAGA,IAAA,OAAO,EAAE,MAAMf,SAAS,CAACe,IAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKA,IALL,CADH,CAFL,CADJ,EAaKP,iBAAiB,CAACM,GAAlB,CAAuBE,CAAD,IAAO;AAC1B,wBACI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,CAAC,CAACC,IAAhB;AAAsB,MAAA,OAAO,EAAED,CAAC,CAACE,OAAjC;AAA0C,MAAA,QAAQ,EAAEF,CAAC,CAACG,QAAtD;AAAgE,MAAA,IAAI,EAAEH,CAAC,CAACJ,IAAxE;AAA8E,MAAA,KAAK,EAAEI,CAAC,CAACI,KAAvF;AAA8F,MAAA,SAAS,EAAEJ,CAAC,CAACK,SAAF,CAAYT,IAArH;AAA2H,MAAA,SAAS,EAAEI,CAAC,CAACM,SAAxI;AAAmJ,MAAA,MAAM,EAAEvB,MAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJA,CAbL,CADJ;AAsBH","sourcesContent":["import React from \"react\"\r\nimport './GroupButton.css'\r\nimport styled from 'styled-components';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Country from \"./Country.jsx\";\r\n\r\nexport default function GroupButton(props){\r\n    const types = ['Continent', 'Language']\r\n    const [active, setActive] = React.useState(types[0]); \r\n    const { loading, error, data } = useQuery(props.countrynames);\r\n    \r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n\r\n    const TurnButton = styled.button`\r\n        width:225px;\r\n        height:40px;\r\n        margin-left:95px;\r\n        cursor:pointer;\r\n        background: -moz-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        background: -webkit-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        background: linear-gradient(to bottom, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        border: 1px solid #6d6d6d;\r\n        border-radius: 5px;\r\n        ${({ active }) =>\r\n            active &&\r\n        `\r\n        background: -moz-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        background: -webkit-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        background: linear-gradient(to bottom, rgb(38, 131, 253) 0%, rgb(38, 131, 253) 84%, #6d6d6d 100%);\r\n        color:white;\r\n        `}    \r\n    `;\r\n    \r\n    let filteredCountries = data.countries.filter(country => country.name.includes(props.country));\r\n    // console.log(filteredCountries)\r\n    return(\r\n        <>\r\n            <div className=\"groups\">\r\n                <h1>Group by:</h1>\r\n                {types.map((type) => (\r\n                    <TurnButton\r\n                    key={type}\r\n                    active={active === type}\r\n                    onClick={() => setActive(type)}\r\n                    >\r\n                        {type}\r\n                    </TurnButton>\r\n                ))}\r\n            </div>\r\n            {filteredCountries.map((c) => {\r\n                return(\r\n                    <Country key={c.code} capital={c.capital} currency={c.currency} name={c.name} emoji={c.emoji} continent={c.continent.name} languages={c.languages} active={active}/>\r\n                )\r\n            })}\r\n        </>\r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
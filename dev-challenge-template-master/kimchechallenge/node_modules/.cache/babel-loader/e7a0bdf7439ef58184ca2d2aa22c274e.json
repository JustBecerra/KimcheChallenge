{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justo\\\\Desktop\\\\KimcheChallenge\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\components\\\\GroupButton.jsx\";\nimport React from \"react\";\nimport './GroupButton.css';\nimport styled from 'styled-components';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nexport default function GroupButton(props) {\n  const countrynames = gql`\n        query {\n        country(code: \"1234\") {\n            name\n            }\n        }\n    `;\n  const types = ['Continent', 'Language'];\n  const [active, setActive] = React.useState(types[0]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(countrynames);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n  console.log(data);\n  const TurnButton = styled.button`\n        width:225px;\n        height:40px;\n        margin-left:95px;\n        cursor:pointer;\n        background: -moz-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        background: -webkit-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        background: linear-gradient(to bottom, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        border: 1px solid #6d6d6d;\n        border-radius: 5px;\n        ${({\n    active\n  }) => active && `\n        background: -moz-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        background: -webkit-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\n        background: linear-gradient(to bottom, rgb(38, 131, 253) 0%, rgb(38, 131, 253) 84%, #6d6d6d 100%);\n        color:white;\n        `}    \n    `;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"groups\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Group by:\"), types.map(type => /*#__PURE__*/React.createElement(TurnButton, {\n    key: type,\n    active: active === type,\n    onClick: () => setActive(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, type))));\n}","map":{"version":3,"sources":["C:/Users/Justo/Desktop/KimcheChallenge/dev-challenge-template-master/kimchechallenge/src/components/GroupButton.jsx"],"names":["React","styled","useQuery","gql","GroupButton","props","countrynames","types","active","setActive","useState","loading","error","data","console","log","TurnButton","button","map","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACtC,QAAMC,YAAY,GAAGH,GAAI;;;;;;KAAzB;AAOA,QAAMI,KAAK,GAAG,CAAC,WAAD,EAAc,UAAd,CAAd;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACU,QAAN,CAAeH,KAAK,CAAC,CAAD,CAApB,CAA5B;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACI,YAAD,CAAzC;AAOA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,QAAMG,UAAU,GAAGf,MAAM,CAACgB,MAAO;;;;;;;;;;UAU3B,CAAC;AAAET,IAAAA;AAAF,GAAD,KACEA,MAAM,IACT;;;;;SAKC;KAjBN;AAoBA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKD,KAAK,CAACW,GAAN,CAAWC,IAAD,iBACP,oBAAC,UAAD;AACA,IAAA,GAAG,EAAEA,IADL;AAEA,IAAA,MAAM,EAAEX,MAAM,KAAKW,IAFnB;AAGA,IAAA,OAAO,EAAE,MAAMV,SAAS,CAACU,IAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKA,IALL,CADH,CAFL,CADJ,CADJ;AAiBH","sourcesContent":["import React from \"react\"\r\nimport './GroupButton.css'\r\nimport styled from 'styled-components';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nexport default function GroupButton(props){\r\n    const countrynames = gql`\r\n        query {\r\n        country(code: \"1234\") {\r\n            name\r\n            }\r\n        }\r\n    `;\r\n    const types = ['Continent', 'Language']\r\n    const [active, setActive] = React.useState(types[0]); \r\n    const { loading, error, data } = useQuery(countrynames);\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n\r\n    console.log(data)\r\n\r\n    const TurnButton = styled.button`\r\n        width:225px;\r\n        height:40px;\r\n        margin-left:95px;\r\n        cursor:pointer;\r\n        background: -moz-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        background: -webkit-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        background: linear-gradient(to bottom, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        border: 1px solid #6d6d6d;\r\n        border-radius: 5px;\r\n        ${({ active }) =>\r\n            active &&\r\n        `\r\n        background: -moz-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        background: -webkit-linear-gradient(top, rgb(219, 219, 219) 0%, rgb(219, 219, 219) 84%, #6d6d6d 100%);\r\n        background: linear-gradient(to bottom, rgb(38, 131, 253) 0%, rgb(38, 131, 253) 84%, #6d6d6d 100%);\r\n        color:white;\r\n        `}    \r\n    `;\r\n\r\n    return(\r\n        <>\r\n            <div className=\"groups\">\r\n                <h1>Group by:</h1>\r\n                {types.map((type) => (\r\n                    <TurnButton\r\n                    key={type}\r\n                    active={active === type}\r\n                    onClick={() => setActive(type)}\r\n                    >\r\n                        {type}\r\n                    </TurnButton>\r\n                ))}\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}